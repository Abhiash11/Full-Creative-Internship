Default Initialization of Instance Variables
	When we declare a variable without assigning it an explicit value, the Java compiler will assign a default value to the variable.
Example:   
	package week2;
	public class DefInit {
		int varI;
		float varF;
		boolean varB;
		long varL;
		byte varBy;
		short varS;
		double varD;
		String s;
		public static void main(String[] args) {
			DefInit obj= new DefInit();
			System.out.println("Default int value ::"+obj.varI);
			System.out.println("Default float value ::"+obj.varF);
			System.out.println("Default boolean value ::"+obj.varB);
			System.out.println("Default long value ::"+obj.varL);
			System.out.println("Default byte value ::"+obj.varBy);
			System.out.println("Default short value ::"+obj.varS);
			System.out.println("Default double value ::"+obj.varD);
			System.out.println("Default String value ::" +obj.s);

	}}
Output:
	Default int value ::0
	Default float value ::0.0
	Default boolean value ::false
	Default long value ::0
	Default byte value ::0
	Default short value ::0
	Default double value ::0.0
	Default String value ::null

Note: The default values of different datatypes are:
	Integer numbers have default value: 0
for int type: 0
for byte type: (byte) 0
for short type: (short) 0
for long type: 0L
Floating point numbers have default value: 0.0
for float type: 0.0f
for double type: 0.0d
Boolean variables have default value: false
Character variables have default value: ‘\u0000’
Object references have default value: null




